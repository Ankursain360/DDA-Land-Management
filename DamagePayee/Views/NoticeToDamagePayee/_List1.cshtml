@model Libraries.Repository.Common.PagedResult<Libraries.Model.Entity.Noticetodamagepayee>

<table class="table table-sm table-bordered mb-0 table-striped">
    <thead class="text-nowrap">
        <tr>

            <th> File No</th>
            <th> Name</th>
            <th> Address</th>
            <th>Property Details</th>
            <th> Area</th>
            <th> Interest %</th>
            <th>Status</th>
            <th>Operation</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Results)
        {
<tr>
    <td>@item.FileNo</td>
    <td>@item.Name</td>
    <td>@item.Address</td>
   
    <td>@item.PropertyDetails</td>

    <td>@item.Area</td>
   
    <td>@item.InterestPercentage</td>




    <td>
        @if (item.IsActive == 1)
        {
<span class="badge badge-primary px-2 py-1">Active</span> }
else
{
<span class="badge badge-danger px-2 py-1">Inactive</span>}
    </td>

    <td>
        <div class="action-btns">
            <a asp-action="View" asp-route-id="@item.Id" title="View" class="view">  <i class="ri-eye-fill"></i> </a>
            <a asp-action="Edit" asp-route-id="@item.Id" title="edit" class="edit"> <i class="ri-edit-line"></i> </a>
           </div>

    </td>

</tr>
}
    </tbody>

</table>

@await Component.InvokeAsync("Pager", new { totalCount = Model.RowCount, pageNumber = Model.CurrentPage, pageSize = Model.PazeSize })
