@model Libraries.Repository.Common.PagedResult<Libraries.Model.Entity.Requestforproceeding>

<table class="table table-sm table-bordered mb-0 table-striped">
    <thead class="text-nowrap">
        <tr>
            <th>Reference No.</th>

            <th>Society Name </th>
            <th>Allotment Date</th>
            <th>Area(sq. mt.)</th>
            <th>Subject</th>
            <th> Status</th>
            <th> Letter Status</th>
            <th>Operations</th>
        </tr>
    </thead>
    <tbody>
        @if (Model != null && Model.Results.Count() > 0)
        {
            @foreach (var item in Model.Results)
            {
        <tr>
            <td>@(item.Allotment == null ? "" : item.Allotment.Application == null ? "" : item.Allotment.Application.RefNo)</td>

            <td>@(item.Allotment == null ? "" : item.Allotment.Application == null ? "" : item.Allotment.Application.Name)</td>
            <td>@(item.Allotment == null ? "" : (Convert.ToDateTime(item.Allotment.AllotmentDate)).ToString("dd-MMM-yyyy"))</td>
            <td>@(item.Allotment == null ? "" : item.Allotment.TotalArea.ToString())</td>
            <td>@(item.Allotment == null ? "" : item.Subject == null ? "" : item.Subject)</td>
            <td>
                @if (item.IsActive == 1)
                {
                    <span class="badge bg-primary px-2 py-1">Active</span> }
                else
                {
                    <span class="badge bg-danger px-2 py-1">Inactive</span>}
            </td>
            <td>
                @if (item.Status == 1)
                {
                    <span class="badge badge-secondary px-2 py-1">Generated</span>}
                else if (item.Status == 2)
                {
                    <span class="badge bg-primary px-2 py-1">Uploaded</span>}
                else if (item.Status == 3)
                {
                    <span class="badge badge-success px-2 py-1">Sent</span>}
                else
                {
                    <span class="badge badge-warning px-2 py-1">Not Generated</span>
                }
            </td>
            <td>
                <div class="action-btns">
                    <a asp-action="View" asp-route-id="@item.Id" title="View" class="view">  <i class="ri-eye-fill"></i> </a>
                    @if (item.IsSend != 1)
                    {
                        <a asp-action="Edit" asp-route-id="@item.Id" title="edit" class="edit"> <i class="ri-edit-line"></i> </a>
                        <a asp-action="Delete" asp-route-id="@item.Id" title="delete" class="remove" onclick="return confirm('Are you sure, you want to delete this record?')"><i class="ri-delete-bin-5-fill"></i></a>
                        @if (item.IsActive == 1)
                        {
                            <a asp-action="GenerateLetter" asp-controller="ProceedingEvictionLetter" asp-route-id="@item.Id" title="Generate" onclick="return confirm('Are you sure, you want to Generate Letter for this record?')"><i class="ri-mail-line"></i></a>
                        }
                        @if (item.IsActive == 1)
                        {
                            <a asp-action="UploadLetter" asp-controller="ProceedingEvictionLetter" asp-route-id="@item.Id" title="Upload"> <i class="ri-upload-2-line"></i> </a>
                        }
                    }
                    @if (item.IsUpload == 1)
                    {
                        <a asp-action="ViewProceedingLetter" asp-controller="ProceedingEvictionLetter" asp-route-id="@item.Id" title="Download" target="_blank"><i class="ri-file-download-line"></i> </a>
                    }
                </div>

            </td>

        </tr>
            }
        }
        else
        {
            <tr>
                <th colspan="14" style="text-align:center"> No Record Available! </th>
            </tr>
        }
    </tbody>

</table>

@await Component.InvokeAsync("Pager", new { totalCount = Model.RowCount, pageNumber = Model.CurrentPage, pageSize = Model.PazeSize })
