@model Libraries.Repository.Common.PagedResult<Libraries.Model.Entity.Request>
<table class="table table-sm table-bordered mb-0 table-striped">
    <thead class="text-nowrap">
        <tr>


            <th>Proposal Name</th>
            <th>File No</th>
            <th>Requiring Body</th>
            <th>Area/Locality</th>
            <th>Approval Status</th>

            <th>Operation</th>
        </tr>
    </thead>
    <tbody>
        @if (Model != null && Model.Results.Count() > 0)
        {
            @foreach (var item in Model.Results)
            {
        <tr>

            <td>@item.PproposalName</td>
            <td>@item.PfileNo</td>
            <td>@item.RequiringBody</td>
            <td>@item.AreaLocality</td>
            <td>
                @(item.ApprovedStatusNavigation == null ? "" : item.ApprovedStatusNavigation.SentStatusName)
            </td>
            @if (ViewBag.IsApproved == 0)
            {
                <td>
                    <a asp-action="Create" asp-route-id="@item.Id" title="edit" class="edit"><i class="ri-edit-line"></i> </a>
                </td>
            }
            else
            {
                <td>
                    <a asp-action="View" asp-route-id="@item.Id" title="View" class="view"><i class="ri-eye-line"></i> </a>
                </td>
            }
        </tr>
            }
        }
        else
        {
            <tr>
                <th colspan="14" style="text-align:center"> No Record Available! </th>
            </tr>
        }
    </tbody>
</table>
@await Component.InvokeAsync("Pager", new { totalCount = Model.RowCount, pageNumber = Model.CurrentPage, pageSize = Model.PazeSize })
