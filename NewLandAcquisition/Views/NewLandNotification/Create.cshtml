@model Libraries.Model.Entity.Newlandnotification
@await Component.InvokeAsync("PageHeader", new { pageName = "Notification Master" })

<div class="pt-3">
    <form asp-action="Create" method="post" class="d-block rounded border p-3 bg-white search-filer shadow mb-3" enctype="multipart/form-data">


        <h3 class="mb-3 d-flex">Add Details <span class="ms-auto"><span style="color:red">*&nbsp;</span>Marked are mandatory fields</span> </h3>




        <div class="row">
            <div class="col-md-6">
                <div class="floating-label-wrap">

                    <select class="floating-label-field floating-label-field--s3" asp-for="NotificationTypeId" asp-items="@(new SelectList(Model.notificationtypeList, "Id","NotificationType"))" required>
                        <option selected="selected" disabled="disabled" value="">--Select-- </option>
                    </select>
                    <span asp-validation-for="NotificationTypeId" class="text-danger"></span>
                    <label class="floating-label" asp-for="NotificationTypeId">Notification Type<span style="color:red">*</span></label>
                </div>
            </div>
            <div class="col-md-6">
                <div class="floating-label-wrap mb-3 mb-md-0">

                    <input asp-for="NotificationNo" class="floating-label-field floating-label-field--s3" placeholder="Notification No" />
                    <span asp-validation-for="NotificationNo" class="text-danger"></span>
                    <label class="floating-label">Notification No.</label>
                </div>
            </div>
        </div>

        <div class="row pt-3">
            <div class="col-md-6">
                <div class="floating-label-wrap">
                    <input asp-for="Date" class="floating-label-field floating-label-field--s3" placeholder="Notification No" type="date" />
                    <span asp-validation-for="Date" class="text-danger"></span>
                    <label class="floating-label">Date</label>
                </div>
            </div>
            <div class="col-md-6">
                <div class="floating-label-wrap mb-3 mb-md-0">
                    <input asp-for="NewlandNotificationFile" class="floating-label-field floating-label-field--s3 checkExtension" type="file" multiple />
                    <span asp-validation-for="NewlandNotificationFile" class="text-danger"></span>
                    <label class="floating-label" asp-for="NewlandNotificationFile"> Upload Gazette Notification<span style="color:red">(.pdf only)</span></label>
                </div>
            </div>
        </div>


        <div class="row pt-3">

            <div class="col-md-6">
                <div class="floating-label-wrap mb-3 mb-md-0">

                    <select asp-for="IsActive" class="floating-label-field floating-label-field--s3">
                        <option value="1">Active</option>
                        <option value="0">InActive</option>
                    </select>
                    <span asp-validation-for="IsActive" class="text-danger"></span>
                    <label class="floating-label"> Status</label>
                </div>
            </div>
        </div>
        <div class="row pt-3">
            <div class="col-md-12">
                <div class="floating-label-wrap mb-3 mb-md-0">
                    <textarea asp-for="Remarks" placeholder="Remarks" class="floating-label-field floating-label-field--s3"></textarea>
                    <span asp-validation-for="Remarks" class="text-danger"></span>
                    <label class="floating-label">Remarks</label>
                </div>
            </div>
        </div>


        <div class="row mt-md-3">
            <div class=" col-md-12">
                <input type="submit" value="Submit" class="btn btn-theme " />

                @Html.ActionLink("Back", "Index", "NewlandNotification", null, new { @class = "btn btn-theme " })
            </div>
        </div>

    </form>
</div>



<script>


    $('.checkExtension').on('change', function (e) {

        debugger;
        var flag = false;
        var result = $(this).val();
        var file = result;
        if (file != null) {

            var multi = file.split(".");
            if (multi.length > 2) {

                alert("Please upload proper file with single dot in filename");
                $(this).val('');
                return;
            }
            var extension = file.substr((file.lastIndexOf('.') + 1));

            switch (extension) {
                case 'pdf':
                    flag = true;
                    $('#error').empty();
                    break;
                case 'PDF':
                    flag = true;
                    $('#error').empty();
                    break;
                default:
                    alert("You can upload only pdf extension file Only")
                    $(this).val('');
                    flag = false;
            }


            if (flag == true) {

                var FileID = $(this).attr('id');

                var size = ValidateFileSize(FileID, $(this));

                if (size > 5) {
                    alert("You Can Upload file Size Up to 5 MB.");
                    $(this).val('');
                }
                else {

                    filecontrol = $(this);
                    var myformData = new FormData();
                    myformData.append('file', $(this)[0].files[0]);
                    $.ajax({
                        async: false,
                        type: "POST",
                        url: "/NewlandNotification/CheckFile",
                        contentType: false,
                        processData: false,
                        data: myformData,
                        success: function (response) {

                            showResult(response, filecontrol)

                        },
                        failure: function (response) {
                            //alert(response.d);
                            return false;
                        }
                    });
                    function showResult(response, filecontrol) {
                        debugger;
                        if (response == false) {
                            alert("Please select vaild pdf file.");
                            filecontrol.val('');
                        }
                        else {
                            return true;
                        }
                    }

                }
            }
        }


    });



    function ValidateFileSize(fileid, file) {
        try {
            var fileSize = 0;
            if (navigator.userAgent.match(/msie/i)) {
                var obaxo = new ActiveXObject("Scripting.FileSystemObject");
                var filePath = file[0].value;
                var objFile = obaxo.getFile(filePath);
                var fileSize = objFile.size;
                fileSize = fileSize / 1048576;
            }
            else {
                fileSize = file[0].files[0].size
                fileSize = fileSize / 1048576;
            }

            return fileSize;
        }
        catch (e) {
            alert("Error is :" + e);
        }
    }


</script>