@model Libraries.Repository.Common.PagedResult<Libraries.Model.Entity.Zone>

<table class="table table-responsive table-bordered table-card">

    <thead class="thead">
        <tr class="myapp-hed1">
            <th>Department </th>
            <th> Zone Name</th>
            <th> Zone Code</th>
            <th>Active Status</th>
            <th>Operation</th>
        </tr>
    </thead>
    <tbody class="tbody">
        @foreach (var item in Model.Results)
        {
            <tr>
                <td>@item.Department.Name</td>
                <td>@item.Name</td>

                <td>@item.Code</td>

                <td>@(item.IsActive == 1 ? "Active" : "InActive")</td>
                <td>
                    <a asp-action="View" asp-route-id="@item.Id" title="View">  <i class="glyphicon glyphicon-eye-open" aria-hidden="true"></i> </a>

                    <a asp-action="Edit" asp-route-id="@item.Id" title="edit"> &nbsp; | &nbsp;  <i class="glyphicon glyphicon-pencil" aria-hidden="true"></i> </a>

                    <a asp-action="DeleteConfirmed" asp-route-id="@item.Id" title="delete" onclick="return confirm('Are You Sure, You want to Delete this Record?')">   &nbsp;|&nbsp;<i class="glyphicon glyphicon-trash" aria-hidden="true"></i></a>
                </td>

            </tr>


        }
    </tbody>

</table>

@await Component.InvokeAsync("Pager", new { totalCount = Model.RowCount, pageNumber = Model.CurrentPage, pageSize = Model.PazeSize })