@*@model Libraries.Repository.Common.PagedResult<Libraries.Model.Entity.Rate>*@
@model IEnumerable<Libraries.Model.Entity.Rate>
@{int rowNo = 0; }
<table class="table table-bordered table-card">

    <thead class="thead">
        <tr class="myapp-hed1">
            <th>Sr.No</th>
            <th>Property Type </th>
            <th>From Date</th>
            <th>To Date</th>
            <th>Rate Percentage</th>
            <th>Active Status</th>
            <th>Operations</th>
        </tr>
    </thead>
    <tbody class="tbody">
        @foreach (var item in Model)
        {
            <tr>
                <td>@(rowNo += 1)</td>
                <td>@item.Property.Name</td>
                <td>@item.FromDate.ToString("dd-MMM-yyyy")</td>

                <td>@item.ToDate.ToString("dd-MMM-yyyy")</td>
                <td>@item.RatePercentage</td>

                <td>
                    @if (item.IsActive == 1)
                    {
                        <span class="badge badge-primary px-2 py-1">Active</span>
                    }
                    else
                    {
                        <span class="badge badge-danger px-2 py-1">Inactive</span>
                    }
                </td>
                <td>
                    <div class="action-btns">
                        <a asp-action="View" asp-route-id="@item.Id" title="View" class="view"><i class="ri-eye-fill"></i> </a>
                        <a asp-action="Edit" asp-route-id="@item.Id" title="edit" class="edit"><i class="ri-edit-line"></i> </a>
                        <a asp-action="Delete" asp-route-id="@item.Id" title="delete" class="remove" onclick="return confirm('Are you sure, you want to delete this record?')">  <i class="ri-delete-bin-5-fill"></i></a>
                    </div>
                </td>

            </tr>


        }
    </tbody>

</table>

@*@await Component.InvokeAsync("Pager", new { totalCount = Model.RowCount, pageNumber = Model.CurrentPage, pageSize = Model.PazeSize })*@