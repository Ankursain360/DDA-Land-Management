@model Libraries.Repository.Common.PagedResult<Libraries.Model.Entity.Module>
<table class="table table-sm table-bordered mb-0 table-striped">
    <thead class="text-nowrap">
        <tr>
            <th>Guid</th>
            <th>Module Category</th>
            <th>Module Name</th>
            @*<th>Description</th>*@
            <th>Url</th>
            <th>Show On Landing Page</th>
            <th>Sort By</th>
            @*<th>Target</th>*@
            <th>Status</th>
            <th>Operations</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Results)
        {
        <tr>
            <td>@item.Guid</td>
            <td>@(item.ModuleCategory == null ? "" : item.ModuleCategory.CategoryName)</td>
            <td>@item.Name</td>
            @*<td>@item.Description</td>*@
            <td>@item.Url</td>
            <td>
                @if (item.ShowonLandingPage == "yes")
                {
                    <span>Yes</span> }
                else
                {
                    <span>No</span>}
            </td>

            <td>@item.SortBy</td>
            @*<td>@item.Target</td>*@
            <td>
                @if (item.IsActive == 1)
                {
                    <span class="badge bg-primary px-2 py-1">Active</span>
                }
                else
                {
                    <span class="badge bg-danger px-2 py-1">Inactive</span>
                }
            </td>
            <td>
                <div class="action-btns">
                    <a asp-action="View" asp-route-id="@item.Id" title="View" class="view">  <i class="ri-eye-fill"></i> </a>
                    <a asp-action="Edit" asp-route-id="@item.Id" title="edit" class="edit"> <i class="ri-edit-line"></i> </a>
                    <a asp-action="Delete" asp-route-id="@item.Id" title="delete" class="remove" onclick="return confirm('Are you sure, you want to delete this record?')"><i class="ri-delete-bin-5-fill"></i></a>
                </div>

            </td>
        </tr>
        }
    </tbody>
</table>
@await Component.InvokeAsync("Pager", new { totalCount = Model.RowCount, pageNumber = Model.CurrentPage, pageSize = Model.PazeSize })
