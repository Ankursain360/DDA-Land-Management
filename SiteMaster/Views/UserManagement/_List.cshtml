@model Libraries.Repository.Common.PagedResult<Model.Entity.Userprofile>

<table class="table table-responsive table-bordered table-card">

    <thead class="thead">
        <tr>
            <th>User Name</th>
            <th>Name</th>
            <th>Role</th>
            <th>Contact No.</th>
            <th>Email Id</th>
            <th>Zone</th>
            <th>District</th>
            <th>Department</th>
            <th>Status</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody class="tbody">
        @foreach (var item in Model.Results)
        {
        <tr>
            <td>@item.User.UserName</td>
            <td>@item.User.Name</td>
            <td>@item.Role.Name</td>
            <td>@item.User.PhoneNumber</td>
            <td>@item.User.Email</td>
            <td>@(item.Zone==null?"": item.Zone.Name)</td>
            <td>@(item.District==null?"": item.District.Name)</td>
            <td>@item.Department.Name</td>
            <td>
                @(item.IsActive == 1 ? "Active" : "Inactive")
            </td>
            <td>
                @*<a asp-action="View" asp-route-id="@item.Id" title="View">  <i class="glyphicon glyphicon-eye-open" aria-hidden="true"></i> </a>
        <a asp-action="Edit" asp-route-id="@item.Id" title="edit"> &nbsp; | &nbsp;  <i class="glyphicon glyphicon-pencil" aria-hidden="true"></i> </a>
        <a asp-action="DeleteConfirmed" asp-route-id="@item.Id" title="delete" onclick="return confirm('Are You Sure, You want to Delete this Record?')">
            &nbsp;|&nbsp;<i class="glyphicon glyphicon-trash" aria-hidden="true"></i>
        </a>*@
                <i class="glyphicon glyphicon-eye-open" aria-hidden="true"></i> 
                &nbsp; | &nbsp;  <i class="glyphicon glyphicon-pencil" aria-hidden="true"></i> 
                    &nbsp;|&nbsp;<i class="glyphicon glyphicon-trash" aria-hidden="true"></i>
            </td>
        </tr>
        }
    </tbody>
</table>
@await Component.InvokeAsync("Pager", new { totalCount = Model.RowCount, pageNumber = Model.CurrentPage, pageSize = Model.PazeSize })