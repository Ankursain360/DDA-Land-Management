@model Libraries.Repository.Common.PagedResult<Libraries.Model.Entity.Log>

<table class="table table-sm table-bordered mb-0 table-striped">
    <thead class="text-nowrap">
        <tr>
            <th>TraceId</th>
            <th>Application</th>
            <th>Logged</th>
            <th>Level</th>

            @*<th>Level</th>*@
            <th>Logger</th>

            @*<th>Callsite</th>*@
            @*<th>Exception</th>*@
            <th>Operations</th>

        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Results)
        {
            <tr>

                <td>@item.TraceId</td>
                <td>@item.Application</td>
                <td>@item.Logged</td>
                <td>@item.Level</td>
                <td>@item.Logger</td>
                @*<td>@item.Callsite</td>
                <td>@item.Exception</td>*@




                <td>
                    <div class="action-btns">
                        <a asp-action="View" asp-route-id="@item.Id" title="View" class="view">  <i class="ri-eye-fill"></i> </a>
                        @*<a asp-action="Edit" asp-route-id="@item.Id" title="edit" class="edit"> <i class="ri-edit-line"></i> </a>
                            <a asp-action="Delete" asp-route-id="@item.Id" title="delete" class="remove" onclick="return confirm('Are you sure, you want to delete this record?')"><i class="ri-delete-bin-5-fill"></i></a>*@
                    </div>
                </td>

            </tr>
        }

    </tbody>
</table>
@await Component.InvokeAsync("Pager", new { totalCount = Model.RowCount, pageNumber = Model.CurrentPage, pageSize = Model.PazeSize })