@model Libraries.Repository.Common.PagedResult<Libraries.Model.Entity.Kycform>

<table class="table table-sm table-bordered mb-0 table-striped">
    <thead class="text-nowrap">
        <tr>

            <th> Property </th>
            <th>Nature of Property </th>
            <th> File No </th>
            <th> Branch </th>
            <th> Zone </th>
            <th> Locality </th>
            <th> Date Of Allotment letter </th>
            <th> Date Of Possession </th>
            <th>Operations</th>
        </tr>
    </thead>
    <tbody>
        @if (Model != null && Model.Results.Count() > 0)
        {
            @foreach (var item in Model.Results)
            {
                <tr>
                    <td>@item.Property</td>

                    <td> @(item.PropertyType == null?"": item.PropertyType.Name) </td>
                    <td>@item.FileNo</td>
                    <td> @(item.Branch == null?"": item.Branch.Name)  </td>
                    <td> @(item.Zone == null?"": item.Zone.Name) </td>
                    <td> @(item.Locality == null?"": item.Locality.Name) </td>
                    <td>@(item.AllotmentLetterDate == null ? "" : (Convert.ToDateTime(item.AllotmentLetterDate)).ToString("dd-MMM-yyyy"))</td>
                    <td>@(item.PossessionDate == null ? "" : (Convert.ToDateTime(item.PossessionDate)).ToString("dd-MMM-yyyy"))</td>

                    <td>
                        <div class="action-btns">
                            <a asp-action="View" asp-route-Id="@item.Id" onCl title="View"> <span class="badge badge-primary px-2 py-1">View Demand Letter</span> </a>



                        </div>

                    </td>

                </tr>
            }
        }
        else
        {
            <tr>
                <th colspan="14" style="text-align:center"> No Record Available! </th>
            </tr>
        }
    </tbody>

</table>

@await Component.InvokeAsync("Pager", new { totalCount = Model.RowCount, pageNumber = Model.CurrentPage, pageSize = Model.PazeSize })
