@model Libraries.Repository.Common.PagedResult<Libraries.Model.Entity.Watchandward>
<table class="table table-sm table-bordered mb-0 table-striped">


    <thead class="text-nowrap">
        <tr>
            <th>Date</th>
            <th>Locality(Village)</th>
            <th>Khasra No.</th>
            <th>Primary List No.</th>
            <th>Status on Ground</th>
            <th>Operations</th>
        </tr>
    </thead>
    <tbody>
        @if (Model != null && Model.Results.Count() > 0)
        {
            @foreach (var item in Model.Results)
            {
                <tr>

                    <td> @(Convert.ToDateTime(item.Date).ToString("dd-MMM-yyyy"))</td>
                    <td>@(item.PrimaryListNoNavigation.LocalityId == null ? ""  : item.PrimaryListNoNavigation.Locality.Name)</td>
                    <td>@item.PrimaryListNoNavigation.KhasraNo</td>
                    <td>@(item.PrimaryListNoNavigation.PrimaryListNo == null ? "" : item.PrimaryListNoNavigation.PrimaryListNo)</td>
                    <td>@item.StatusOnGround</td>

                    <td style="min-width:120px;">
                        <div class="action-btns">
                            <a asp-action="View" asp-route-id="@item.Id" title="View" class="view"><i class="ri-eye-fill"></i> </a>
                            @if (item.PendingAt == "0")
                            {
                                <a asp-action="Edit" asp-route-id="@item.Id" title="edit" class="edit"><i class="ri-edit-line"></i> </a>
                                <a asp-action="Delete" asp-route-id="@item.Id" title="delete" class="remove" onclick="return confirm('Are You Sure, You want to Delete this Record?')">  <i class="ri-delete-bin-5-fill"></i></a>
                            }

                        </div>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <th colspan="14" style="text-align:center"> No Record Available! </th>
            </tr>
        }

    </tbody>
</table>
@await Component.InvokeAsync("Pager", new { totalCount = Model.RowCount, pageNumber = Model.CurrentPage, pageSize = Model.PazeSize })