@model Libraries.Repository.Common.PagedResult<Libraries.Model.Entity.Watchandward>

<table class="table table-sm table-bordered mb-0 table-striped">
    <thead class="text-nowrap">

        <tr>

            <th rowspan="2">Date</th>
            <th rowspan="2">Locality Name (Village) </th>

            <th rowspan="2">Land Mark</th>
            <th>Encroachment</th>
            <th rowspan="2">Status on Ground</th>
            <th rowspan="2">Remarks</th>
        </tr>
    </thead>
    <tbody>
        @if (Model != null && Model.Results.Count() > 0)
        {
            @foreach (var item in Model.Results)
            {
        <tr>

            <td>@(item.Date == null ? "" : Convert.ToDateTime(item.Date).ToString("dd-MMM-yyyy"))</td>

            @*<td>@item.Date</td>*@
            <td>@(item.Locality == null ? "" : item.Locality.Name == null ? "" : item.Locality.Name)</td>

            @*<td>@item.Locality.Name</td>*@

            <td>@item.Landmark</td>
            <td>@(item.Encroachment.ToString() == "1" ? "Yes" : "No")</td>
            <td>@item.StatusOnGround</td>
            <td>@item.Remarks</td>


        </tr>
            }
        }
        else
        {
            <tr>
                <th colspan="13" style="text-align:center"> Data Not Available </th>
            </tr>
        }

    </tbody>

</table>
@await Component.InvokeAsync("Pager", new { totalCount = Model.RowCount, pageNumber = Model.CurrentPage, pageSize = Model.PazeSize })
