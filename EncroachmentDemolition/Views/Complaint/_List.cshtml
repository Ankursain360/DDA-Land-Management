@model Libraries.Repository.Common.PagedResult<Libraries.Model.Entity.Onlinecomplaint>
@{int rowNo = 0; }

<table class="table table-responsive table-bordered table-card">

    <thead class="thead">
        <tr>
            <th>Sr.No</th>
           
            <th>Complaint Name</th>
            <th>Contact No</th>
            <th>Area/Address</th>
            <th>Complaint Type</th>
            <th>Location</th>
            <th>Status</th>
            <th>Operation</th>
        </tr>
    </thead>
    <tbody class="tbody">
        @foreach (var item in Model.Results)
        {
        <tr>
            <td>@(rowNo += 1)</td>
            <td>@item.Name</td>
            <td>@item.Contact</td>
            <td>@item.AddressOfComplaint</td>
            <td>@item.ComplaintType.Name</td>

            <td>@item.Location.Name</td>

            <td>
                @(item.IsActive == 1 ? "Active" : "Inactive")
            </td>
            <td>
                <a asp-action="View" asp-route-id="@item.Id" title="View">  <i class="glyphicon glyphicon-eye-open" aria-hidden="true"></i> </a>

                <a asp-action="Edit" asp-route-id="@item.Id" title="edit"> &nbsp; | &nbsp;  <i class="glyphicon glyphicon-pencil" aria-hidden="true"></i> </a>

                <a asp-action="Delete" asp-route-id="@item.Id" title="delete" onclick="return confirm('Are You Sure, You want to Delete this Record?')">   &nbsp;|&nbsp;<i class="glyphicon glyphicon-trash" aria-hidden="true"></i></a>

            </td>

        </tr>
        }

    </tbody>
</table>
@await Component.InvokeAsync("Pager", new { totalCount = Model.RowCount, pageNumber = Model.CurrentPage, pageSize = Model.PazeSize })