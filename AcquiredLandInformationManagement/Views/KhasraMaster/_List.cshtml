@model Libraries.Repository.Common.PagedResult<Libraries.Model.Entity.Khasra>

<table class="table table-responsive table-bordered table-card">
    <thead class="thead">
        <tr>
            <th>Village</th>
            <th>Rect No</th>
            <th>Land Category</th>
            <th>Khasra No</th>


            <th>Biswa</th>
            <th>Bigha</th>
            <th>Biswanshi</th>
            <th>Status</th>
            <th>Operation</th>
        </tr>
    </thead>
    <tbody class="tbody">
        @foreach (var item in Model.Results)
        {
        <tr>
            <td>@item.Village</td>
            <td>@item.RectNo</td>
            <td>@item.LandCategory</td>

            <td>@item.Name</td>
            <td>@item.Bigha</td>
            <td>@item.Biswa</td>
            <td>@item.Biswanshi</td>
            <td>
                @(item.IsActive  == 1 ? "Active" : "Inactive" )
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id" title="edit"> &nbsp; | &nbsp;  <i class="glyphicon glyphicon-pencil" aria-hidden="true"></i> </a>
                <a asp-action="DeleteConfirmed" asp-route-id="@item.Id" title="delete" onclick="return confirm('Are You Sure, You want to Delete this Record?')">   &nbsp;|&nbsp;<i class="glyphicon glyphicon-trash" aria-hidden="true"></i></a>
            </td>
        </tr>
        }
    </tbody>
</table>
@await Component.InvokeAsync("Pager", new { totalCount = Model.RowCount, pageNumber = Model.CurrentPage, pageSize = Model.PazeSize })