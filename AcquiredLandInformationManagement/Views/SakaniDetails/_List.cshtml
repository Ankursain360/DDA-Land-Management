@model Libraries.Repository.Common.PagedResult<Libraries.Model.Entity.Sakanidetail>

<table class="table table-sm table-bordered mb-0 table-striped">
    <thead class="text-nowrap">
        <tr>
       
            @*<th>Village Name</th>*@
            @*<th>No. Of Khewat</th>
                <th>No. Of Khatauni</th>*@
            <th>Owner Details</th>
            <th>Lease Details</th>
            <th>Tenant Details</th>
            @*<th>Khasra no</th>*@
            <th>Status</th>
            <th>Operation</th>
        </tr>
    </thead>
    <tbody class="tbody">
        @foreach (var item in Model.Results)
        {
        <tr>

            @*<td>@item.Village.Name</td>*@
            @*<td>@item.Khewat.Number</td>*@
            @*<td>@item.Khasra.Name</td>*@
            <td>@item.OwnerDetails</td>
            <td>@item.LeaseDetails</td>
            <td>@item.Tenant</td>

            <td>
                @if (item.IsActive == 1)
                {
                    <span class="badge badge-primary px-2 py-1">Active</span> }
                else
                {
                    <span class="badge badge-danger px-2 py-1">Inactive</span>}
            </td>
        


            <td>
                <div class="action-btns">
              
                    <a asp-action="Edit" asp-route-id="@item.Id" title="edit" class="edit"><i class="ri-edit-line"></i> </a>
                    <a asp-action="Delete" asp-route-id="@item.Id" title="delete" class="remove" onclick="return confirm('Are you sure, you want to delete this record?')">  <i class="ri-delete-bin-5-fill"></i></a>
                </div>
            </td>


        </tr>
        }
    </tbody>
</table>
@await Component.InvokeAsync("Pager", new { totalCount = Model.RowCount, pageNumber = Model.CurrentPage, pageSize = Model.PazeSize })