@model Libraries.Repository.Common.PagedResult<Libraries.Model.Entity.Enchroachment>
@{int rowNo = 0; }
<table class="table table-sm table-bordered mb-0 table-striped">
    <thead class="text-nowrap">
        <tr>
            <th>Sr.No</th>
            <th>Village Name</th>
            <th>Khasra No</th>
            <th>Land Use</th>

            <th>Reference No.</th>
            <th>Action Taken</th>
            <th>Status</th>
            <th>Operation</th>
        </tr>
    </thead>
    <tbody class="tbody">
        @foreach (var item in Model.Results)
        {
            <tr>
                <td>@(rowNo += 1)</td>
                <td>@item.Village.Name</td>
                <td>@item.Khasra.Name</td>
                <td>Yes</td>
                <td>@item.FileNo</td>
                <td>@item.ActionDate</td>


                <td>
                    @(item.IsActive == 1 ? "Active" : "Inactive")
                </td>
                <td>
                    <div class="action-btns">
                        <a asp-action="View" asp-route-id="@item.Id" title="View" class="view">  <i class="ri-eye-fill"></i> </a>
                        <a asp-action="Edit" asp-route-id="@item.Id" title="edit" class="edit"> <i class="ri-edit-line"></i> </a>
                        <a asp-action="Delete" asp-route-id="@item.Id" title="delete" class="remove" onclick="return confirm('Are you sure, you want to delete this record?')"><i class="ri-delete-bin-5-fill"></i></a>
                    </div>
                    @*<a asp-action="View" asp-route-id="@item.Id" title="View">  <i class="glyphicon glyphicon-eye-open" aria-hidden="true"></i> </a>

        <a asp-action="Edit" asp-route-id="@item.Id" title="edit"> &nbsp; | &nbsp;  <i class="glyphicon glyphicon-pencil" aria-hidden="true"></i> </a>

        <a asp-action="DeleteConfirmed" asp-route-id="@item.Id" title="delete" onclick="return confirm('Are You Sure, You want to Delete this Record?')">   &nbsp;|&nbsp;<i class="glyphicon glyphicon-trash" aria-hidden="true"></i></a>*@

                </td>

            </tr>
        }

    </tbody>
</table>
@await Component.InvokeAsync("Pager", new { totalCount = Model.RowCount, pageNumber = Model.CurrentPage, pageSize = Model.PazeSize })